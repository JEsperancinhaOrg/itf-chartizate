apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group = 'org.jesperancinha.itf'
version = '3.0.4'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'org.jesperancinha.itf:itf-chartizate-api:3.0.4'

}

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        classpath "com.github.dcendents:android-maven-gradle-plugin:2.1"
        classpath 'org.jesperancinha.itf:itf-chartizate-api:3.0.4'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "2.0.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_11
    }
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath()
            .join(File.pathSeparator))
}

task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

generateJavadocsJar.dependsOn generateJavadocs


allprojects {
    repositories {
        jcenter()
        mavenLocal()
        google()
    }
}

artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "chartizate-text-writer-android"
        websiteUrl = "http://steelzack-developing.blogspot.nl/"
        vcsUrl = "https://github.com/jesperancinha/lib-chartizate-sz/tree/master/chartizate-text-writer-android"
        licenses = ["Apache-2.0"]
        publish = true
    }
}
