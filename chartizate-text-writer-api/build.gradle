apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group = 'chartizate'
version = '1.1.4'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'chartizate:chartizate-text-writer-api:1.1.4'
    compile 'org.fusesource.jansi:jansi:1.11'
}

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        classpath "com.github.dcendents:android-maven-gradle-plugin:1.3"
        classpath 'chartizate:chartizate-text-writer-api:1.1.4'
        classpath 'org.fusesource.jansi:jansi:1.11'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

task generateSourcesJar(type: Jar) {
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
}

task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

generateJavadocsJar.dependsOn generateJavadocs

allprojects {
    repositories {
        jcenter()
        mavenLocal()
    }
}

artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}



Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "chartizate-text-writer-api"
        websiteUrl = "http://steelzack-developing.blogspot.nl/"
        vcsUrl = "https://github.com/jesperancinha/lib-chartizate-sz/tree/master/chartizate-text-writer-api"
        licenses = ["Apache-2.0"]
        publish = true
}
}
